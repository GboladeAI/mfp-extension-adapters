/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * OpenWhisk REST API
 * API for OpenWhisk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * A restricted Rule view that elides properties that are auto-assigned or derived from the URI (i.e., the namespace and name).
 */
@ApiModel(description = "A restricted Rule view that elides properties that are auto-assigned or derived from the URI (i.e., the namespace and name).")
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-08-16T15:08:23.571+05:30")
public class RulePut   {
  @JsonProperty("version")
  private String version = null;

  @JsonProperty("publish")
  private Boolean publish = null;

  @JsonProperty("trigger")
  private String trigger = null;

  @JsonProperty("action")
  private String action = null;

  public RulePut version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Semantic version of the item
   * @return version
  **/
  @JsonProperty("version")
  @ApiModelProperty(value = "Semantic version of the item")
 @Size(min=1)  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public RulePut publish(Boolean publish) {
    this.publish = publish;
    return this;
  }

   /**
   * Whether to publish the item or not
   * @return publish
  **/
  @JsonProperty("publish")
  @ApiModelProperty(value = "Whether to publish the item or not")
  public Boolean getPublish() {
    return publish;
  }

  public void setPublish(Boolean publish) {
    this.publish = publish;
  }

  public RulePut trigger(String trigger) {
    this.trigger = trigger;
    return this;
  }

   /**
   * Name of the trigger
   * @return trigger
  **/
  @JsonProperty("trigger")
  @ApiModelProperty(value = "Name of the trigger")
 @Size(min=1)  public String getTrigger() {
    return trigger;
  }

  public void setTrigger(String trigger) {
    this.trigger = trigger;
  }

  public RulePut action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Name of the action
   * @return action
  **/
  @JsonProperty("action")
  @ApiModelProperty(value = "Name of the action")
 @Size(min=1)  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RulePut rulePut = (RulePut) o;
    return Objects.equals(this.version, rulePut.version) &&
        Objects.equals(this.publish, rulePut.publish) &&
        Objects.equals(this.trigger, rulePut.trigger) &&
        Objects.equals(this.action, rulePut.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, publish, trigger, action);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RulePut {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    publish: ").append(toIndentedString(publish)).append("\n");
    sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

