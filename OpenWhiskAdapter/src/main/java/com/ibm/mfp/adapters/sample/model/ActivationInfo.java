/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * OpenWhisk REST API
 * API for OpenWhisk
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.ibm.mfp.adapters.sample.model.ActivationInfoResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * ActivationInfo
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-07-03T19:13:35.134+05:30")
public class ActivationInfo   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("result")
  private ActivationInfoResult result = null;

  @JsonProperty("stdout")
  private String stdout = null;

  @JsonProperty("stderr")
  private String stderr = null;

  public ActivationInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Activation id
   * @return id
  **/
  @JsonProperty("id")
  @ApiModelProperty(value = "Activation id")
 @Size(min=1)  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ActivationInfo result(ActivationInfoResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @JsonProperty("result")
  @ApiModelProperty(value = "")
  public ActivationInfoResult getResult() {
    return result;
  }

  public void setResult(ActivationInfoResult result) {
    this.result = result;
  }

  public ActivationInfo stdout(String stdout) {
    this.stdout = stdout;
    return this;
  }

   /**
   * Standard output from activation
   * @return stdout
  **/
  @JsonProperty("stdout")
  @ApiModelProperty(value = "Standard output from activation")
  public String getStdout() {
    return stdout;
  }

  public void setStdout(String stdout) {
    this.stdout = stdout;
  }

  public ActivationInfo stderr(String stderr) {
    this.stderr = stderr;
    return this;
  }

   /**
   * Standard error from activation
   * @return stderr
  **/
  @JsonProperty("stderr")
  @ApiModelProperty(value = "Standard error from activation")
  public String getStderr() {
    return stderr;
  }

  public void setStderr(String stderr) {
    this.stderr = stderr;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivationInfo activationInfo = (ActivationInfo) o;
    return Objects.equals(this.id, activationInfo.id) &&
        Objects.equals(this.result, activationInfo.result) &&
        Objects.equals(this.stdout, activationInfo.stdout) &&
        Objects.equals(this.stderr, activationInfo.stderr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, result, stdout, stderr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivationInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    stdout: ").append(toIndentedString(stdout)).append("\n");
    sb.append("    stderr: ").append(toIndentedString(stderr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

