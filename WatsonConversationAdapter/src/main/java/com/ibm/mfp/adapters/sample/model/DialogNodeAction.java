/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Conversation
 * The IBM Watson&trade; Conversation service combines machine learning, natural language understanding, and integrated dialog tools to create conversation flows between your apps and your users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * DialogNodeAction
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-09-04T16:39:33.075+05:30")
public class DialogNodeAction   {
  @JsonProperty("name")
  private String name = null;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
   * The type of action to invoke.
   */
  public enum TypeEnum {
    CLIENT("client"),
    
    SERVER("server");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = TypeEnum.CLIENT;

  @JsonProperty("parameters")
  private Object parameters = null;

  @JsonProperty("result_variable")
  private String resultVariable = null;

  public DialogNodeAction name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the action.
   * @return name
  **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "The name of the action.")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DialogNodeAction type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of action to invoke.
   * @return type
  **/
  @JsonProperty("type")
  @ApiModelProperty(value = "The type of action to invoke.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public DialogNodeAction parameters(Object parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * A map of key/value pairs to be provided to the action.
   * @return parameters
  **/
  @JsonProperty("parameters")
  @ApiModelProperty(value = "A map of key/value pairs to be provided to the action.")
  public Object getParameters() {
    return parameters;
  }

  public void setParameters(Object parameters) {
    this.parameters = parameters;
  }

  public DialogNodeAction resultVariable(String resultVariable) {
    this.resultVariable = resultVariable;
    return this;
  }

   /**
   * The location in the dialog context where the result of the action is stored.
   * @return resultVariable
  **/
  @JsonProperty("result_variable")
  @ApiModelProperty(required = true, value = "The location in the dialog context where the result of the action is stored.")
  @NotNull
  public String getResultVariable() {
    return resultVariable;
  }

  public void setResultVariable(String resultVariable) {
    this.resultVariable = resultVariable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DialogNodeAction dialogNodeAction = (DialogNodeAction) o;
    return Objects.equals(this.name, dialogNodeAction.name) &&
        Objects.equals(this.type, dialogNodeAction.type) &&
        Objects.equals(this.parameters, dialogNodeAction.parameters) &&
        Objects.equals(this.resultVariable, dialogNodeAction.resultVariable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, parameters, resultVariable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DialogNodeAction {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    resultVariable: ").append(toIndentedString(resultVariable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

