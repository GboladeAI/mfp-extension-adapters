/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Conversation
 * The IBM Watson&trade; Conversation service combines machine learning, natural language understanding, and integrated dialog tools to create conversation flows between your apps and your users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.ibm.mfp.adapters.sample.model.Entity;
import com.ibm.mfp.adapters.sample.model.ValueExport;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * EntityExport
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-09-04T16:39:33.075+05:30")
public class EntityExport   {
  @JsonProperty("entity")
  private String entity = null;

  @JsonProperty("created")
  private DateTime created = null;

  @JsonProperty("updated")
  private DateTime updated = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  @JsonProperty("fuzzy_match")
  private Boolean fuzzyMatch = null;

  @JsonProperty("values")
  private List<ValueExport> values = null;

  public EntityExport entity(String entity) {
    this.entity = entity;
    return this;
  }

   /**
   * The name of the entity.
   * @return entity
  **/
  @JsonProperty("entity")
  @ApiModelProperty(required = true, value = "The name of the entity.")
  @NotNull
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }

   /**
   * The timestamp for creation of the entity.
   * @return created
  **/
  @JsonProperty("created")
  @ApiModelProperty(required = true, value = "The timestamp for creation of the entity.")
  @NotNull
  public DateTime getCreated() {
    return created;
  }

   /**
   * The timestamp for the last update to the entity.
   * @return updated
  **/
  @JsonProperty("updated")
  @ApiModelProperty(required = true, value = "The timestamp for the last update to the entity.")
  @NotNull
  public DateTime getUpdated() {
    return updated;
  }

  public EntityExport description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the entity.
   * @return description
  **/
  @JsonProperty("description")
  @ApiModelProperty(value = "The description of the entity.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EntityExport metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Any metadata related to the entity.
   * @return metadata
  **/
  @JsonProperty("metadata")
  @ApiModelProperty(value = "Any metadata related to the entity.")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public EntityExport fuzzyMatch(Boolean fuzzyMatch) {
    this.fuzzyMatch = fuzzyMatch;
    return this;
  }

   /**
   * Whether fuzzy matching is used for the entity.
   * @return fuzzyMatch
  **/
  @JsonProperty("fuzzy_match")
  @ApiModelProperty(value = "Whether fuzzy matching is used for the entity.")
  public Boolean getFuzzyMatch() {
    return fuzzyMatch;
  }

  public void setFuzzyMatch(Boolean fuzzyMatch) {
    this.fuzzyMatch = fuzzyMatch;
  }

  public EntityExport values(List<ValueExport> values) {
    this.values = values;
    return this;
  }

  public EntityExport addValuesItem(ValueExport valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<ValueExport>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * An array of entity values.
   * @return values
  **/
  @JsonProperty("values")
  @ApiModelProperty(value = "An array of entity values.")
  public List<ValueExport> getValues() {
    return values;
  }

  public void setValues(List<ValueExport> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityExport entityExport = (EntityExport) o;
    return Objects.equals(this.entity, entityExport.entity) &&
        Objects.equals(this.created, entityExport.created) &&
        Objects.equals(this.updated, entityExport.updated) &&
        Objects.equals(this.description, entityExport.description) &&
        Objects.equals(this.metadata, entityExport.metadata) &&
        Objects.equals(this.fuzzyMatch, entityExport.fuzzyMatch) &&
        Objects.equals(this.values, entityExport.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entity, created, updated, description, metadata, fuzzyMatch, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityExport {\n");
    
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    fuzzyMatch: ").append(toIndentedString(fuzzyMatch)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

