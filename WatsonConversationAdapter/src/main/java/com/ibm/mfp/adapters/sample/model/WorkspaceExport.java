/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Conversation
 * The IBM Watson&trade; Conversation service combines machine learning, natural language understanding, and integrated dialog tools to create conversation flows between your apps and your users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.mfp.adapters.sample.model.Counterexample;
import com.ibm.mfp.adapters.sample.model.DialogNode;
import com.ibm.mfp.adapters.sample.model.EntityExport;
import com.ibm.mfp.adapters.sample.model.IntentExport;
import com.ibm.mfp.adapters.sample.model.WorkspaceStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * WorkspaceExport
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-09-04T16:39:33.075+05:30")
public class WorkspaceExport   {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  @JsonProperty("created")
  private DateTime created = null;

  @JsonProperty("updated")
  private DateTime updated = null;

  @JsonProperty("workspace_id")
  private String workspaceId = null;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
   * The current status of the workspace.
   */
  public enum StatusEnum {
    NON_EXISTENT("Non Existent"),
    
    TRAINING("Training"),
    
    FAILED("Failed"),
    
    AVAILABLE("Available"),
    
    UNAVAILABLE("Unavailable");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("learning_opt_out")
  private Boolean learningOptOut = false;

  @JsonProperty("intents")
  private List<IntentExport> intents = null;

  @JsonProperty("entities")
  private List<EntityExport> entities = null;

  @JsonProperty("counterexamples")
  private List<Counterexample> counterexamples = null;

  @JsonProperty("dialog_nodes")
  private List<DialogNode> dialogNodes = null;

  public WorkspaceExport name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the workspace.
   * @return name
  **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "The name of the workspace.")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WorkspaceExport description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the workspace.
   * @return description
  **/
  @JsonProperty("description")
  @ApiModelProperty(required = true, value = "The description of the workspace.")
  @NotNull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WorkspaceExport language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language of the workspace.
   * @return language
  **/
  @JsonProperty("language")
  @ApiModelProperty(required = true, value = "The language of the workspace.")
  @NotNull
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public WorkspaceExport metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Any metadata that is required by the workspace.
   * @return metadata
  **/
  @JsonProperty("metadata")
  @ApiModelProperty(required = true, value = "Any metadata that is required by the workspace.")
  @NotNull
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

   /**
   * The timestamp for creation of the workspace.
   * @return created
  **/
  @JsonProperty("created")
  @ApiModelProperty(required = true, value = "The timestamp for creation of the workspace.")
  @NotNull
  public DateTime getCreated() {
    return created;
  }

   /**
   * The timestamp for the last update to the workspace.
   * @return updated
  **/
  @JsonProperty("updated")
  @ApiModelProperty(required = true, value = "The timestamp for the last update to the workspace.")
  @NotNull
  public DateTime getUpdated() {
    return updated;
  }

   /**
   * The workspace ID.
   * @return workspaceId
  **/
  @JsonProperty("workspace_id")
  @ApiModelProperty(required = true, value = "The workspace ID.")
  @NotNull
  public String getWorkspaceId() {
    return workspaceId;
  }

  public WorkspaceExport status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The current status of the workspace.
   * @return status
  **/
  @JsonProperty("status")
  @ApiModelProperty(required = true, value = "The current status of the workspace.")
  @NotNull
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public WorkspaceExport learningOptOut(Boolean learningOptOut) {
    this.learningOptOut = learningOptOut;
    return this;
  }

   /**
   * Whether training data from the workspace can be used by IBM for general service improvements. `true` indicates that workspace training data is not to be used.
   * @return learningOptOut
  **/
  @JsonProperty("learning_opt_out")
  @ApiModelProperty(required = true, value = "Whether training data from the workspace can be used by IBM for general service improvements. `true` indicates that workspace training data is not to be used.")
  @NotNull
  public Boolean getLearningOptOut() {
    return learningOptOut;
  }

  public void setLearningOptOut(Boolean learningOptOut) {
    this.learningOptOut = learningOptOut;
  }

  public WorkspaceExport intents(List<IntentExport> intents) {
    this.intents = intents;
    return this;
  }

  public WorkspaceExport addIntentsItem(IntentExport intentsItem) {
    if (this.intents == null) {
      this.intents = new ArrayList<IntentExport>();
    }
    this.intents.add(intentsItem);
    return this;
  }

   /**
   * An array of intents.
   * @return intents
  **/
  @JsonProperty("intents")
  @ApiModelProperty(value = "An array of intents.")
  public List<IntentExport> getIntents() {
    return intents;
  }

  public void setIntents(List<IntentExport> intents) {
    this.intents = intents;
  }

  public WorkspaceExport entities(List<EntityExport> entities) {
    this.entities = entities;
    return this;
  }

  public WorkspaceExport addEntitiesItem(EntityExport entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<EntityExport>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * An array of entities.
   * @return entities
  **/
  @JsonProperty("entities")
  @ApiModelProperty(value = "An array of entities.")
  public List<EntityExport> getEntities() {
    return entities;
  }

  public void setEntities(List<EntityExport> entities) {
    this.entities = entities;
  }

  public WorkspaceExport counterexamples(List<Counterexample> counterexamples) {
    this.counterexamples = counterexamples;
    return this;
  }

  public WorkspaceExport addCounterexamplesItem(Counterexample counterexamplesItem) {
    if (this.counterexamples == null) {
      this.counterexamples = new ArrayList<Counterexample>();
    }
    this.counterexamples.add(counterexamplesItem);
    return this;
  }

   /**
   * An array of counterexamples.
   * @return counterexamples
  **/
  @JsonProperty("counterexamples")
  @ApiModelProperty(value = "An array of counterexamples.")
  public List<Counterexample> getCounterexamples() {
    return counterexamples;
  }

  public void setCounterexamples(List<Counterexample> counterexamples) {
    this.counterexamples = counterexamples;
  }

  public WorkspaceExport dialogNodes(List<DialogNode> dialogNodes) {
    this.dialogNodes = dialogNodes;
    return this;
  }

  public WorkspaceExport addDialogNodesItem(DialogNode dialogNodesItem) {
    if (this.dialogNodes == null) {
      this.dialogNodes = new ArrayList<DialogNode>();
    }
    this.dialogNodes.add(dialogNodesItem);
    return this;
  }

   /**
   * An array of objects describing the dialog nodes in the workspace.
   * @return dialogNodes
  **/
  @JsonProperty("dialog_nodes")
  @ApiModelProperty(value = "An array of objects describing the dialog nodes in the workspace.")
  public List<DialogNode> getDialogNodes() {
    return dialogNodes;
  }

  public void setDialogNodes(List<DialogNode> dialogNodes) {
    this.dialogNodes = dialogNodes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceExport workspaceExport = (WorkspaceExport) o;
    return Objects.equals(this.name, workspaceExport.name) &&
        Objects.equals(this.description, workspaceExport.description) &&
        Objects.equals(this.language, workspaceExport.language) &&
        Objects.equals(this.metadata, workspaceExport.metadata) &&
        Objects.equals(this.created, workspaceExport.created) &&
        Objects.equals(this.updated, workspaceExport.updated) &&
        Objects.equals(this.workspaceId, workspaceExport.workspaceId) &&
        Objects.equals(this.status, workspaceExport.status) &&
        Objects.equals(this.learningOptOut, workspaceExport.learningOptOut) &&
        Objects.equals(this.intents, workspaceExport.intents) &&
        Objects.equals(this.entities, workspaceExport.entities) &&
        Objects.equals(this.counterexamples, workspaceExport.counterexamples) &&
        Objects.equals(this.dialogNodes, workspaceExport.dialogNodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, language, metadata, created, updated, workspaceId, status, learningOptOut, intents, entities, counterexamples, dialogNodes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceExport {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    workspaceId: ").append(toIndentedString(workspaceId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    learningOptOut: ").append(toIndentedString(learningOptOut)).append("\n");
    sb.append("    intents: ").append(toIndentedString(intents)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    counterexamples: ").append(toIndentedString(counterexamples)).append("\n");
    sb.append("    dialogNodes: ").append(toIndentedString(dialogNodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

