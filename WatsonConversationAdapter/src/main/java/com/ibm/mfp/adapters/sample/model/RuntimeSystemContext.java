/*
 * Conversation
 * The IBM Watson&trade; Conversation service combines machine learning, natural language understanding, and integrated dialog tools to create conversation flows between your apps and your users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * For internal use only.
 */
@ApiModel(description = "For internal use only.")
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-05-19T13:34:31.991+05:30")
public class RuntimeSystemContext   {
  @JsonProperty("RuntimeSystemContext")
  private Object runtimeSystemContext = null;

  public RuntimeSystemContext runtimeSystemContext(Object runtimeSystemContext) {
    this.runtimeSystemContext = runtimeSystemContext;
    return this;
  }

   /**
   * Get runtimeSystemContext
   * @return runtimeSystemContext
  **/
  @JsonProperty("RuntimeSystemContext")
  @ApiModelProperty(value = "")

  public Object getRuntimeSystemContext() {
    return runtimeSystemContext;
  }

  public void setRuntimeSystemContext(Object runtimeSystemContext) {
    this.runtimeSystemContext = runtimeSystemContext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeSystemContext runtimeSystemContext = (RuntimeSystemContext) o;
    return Objects.equals(this.runtimeSystemContext, runtimeSystemContext.runtimeSystemContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runtimeSystemContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeSystemContext {\n");
    
    sb.append("    runtimeSystemContext: ").append(toIndentedString(runtimeSystemContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
