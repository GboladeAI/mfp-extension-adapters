/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Conversation
 * The IBM Watson&trade; Conversation service combines machine learning, natural language understanding, and integrated dialog tools to create conversation flows between your apps and your users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * DialogNodeNextStep
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-09-04T16:39:33.075+05:30")
public class DialogNodeNextStep   {
/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
   * How the `next_step` reference is processed.
   */
  public enum BehaviorEnum {
    TO("jump_to");

    private String value;

    BehaviorEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BehaviorEnum fromValue(String text) {
      for (BehaviorEnum b : BehaviorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("behavior")
  private BehaviorEnum behavior = null;

  @JsonProperty("dialog_node")
  private String dialogNode = null;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
   * Which part of the dialog node to process next.
   */
  public enum SelectorEnum {
    CONDITION("condition"),
    
    CLIENT("client"),
    
    USER_INPUT("user_input"),
    
    BODY("body");

    private String value;

    SelectorEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SelectorEnum fromValue(String text) {
      for (SelectorEnum b : SelectorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("selector")
  private SelectorEnum selector = null;

  public DialogNodeNextStep behavior(BehaviorEnum behavior) {
    this.behavior = behavior;
    return this;
  }

   /**
   * How the `next_step` reference is processed.
   * @return behavior
  **/
  @JsonProperty("behavior")
  @ApiModelProperty(required = true, value = "How the `next_step` reference is processed.")
  @NotNull
  public BehaviorEnum getBehavior() {
    return behavior;
  }

  public void setBehavior(BehaviorEnum behavior) {
    this.behavior = behavior;
  }

  public DialogNodeNextStep dialogNode(String dialogNode) {
    this.dialogNode = dialogNode;
    return this;
  }

   /**
   * The ID of the dialog node to process next.
   * @return dialogNode
  **/
  @JsonProperty("dialog_node")
  @ApiModelProperty(value = "The ID of the dialog node to process next.")
  public String getDialogNode() {
    return dialogNode;
  }

  public void setDialogNode(String dialogNode) {
    this.dialogNode = dialogNode;
  }

  public DialogNodeNextStep selector(SelectorEnum selector) {
    this.selector = selector;
    return this;
  }

   /**
   * Which part of the dialog node to process next.
   * @return selector
  **/
  @JsonProperty("selector")
  @ApiModelProperty(value = "Which part of the dialog node to process next.")
  public SelectorEnum getSelector() {
    return selector;
  }

  public void setSelector(SelectorEnum selector) {
    this.selector = selector;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DialogNodeNextStep dialogNodeNextStep = (DialogNodeNextStep) o;
    return Objects.equals(this.behavior, dialogNodeNextStep.behavior) &&
        Objects.equals(this.dialogNode, dialogNodeNextStep.dialogNode) &&
        Objects.equals(this.selector, dialogNodeNextStep.selector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(behavior, dialogNode, selector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DialogNodeNextStep {\n");
    
    sb.append("    behavior: ").append(toIndentedString(behavior)).append("\n");
    sb.append("    dialogNode: ").append(toIndentedString(dialogNode)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

