/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Discovery
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.ibm.mfp.adapters.sample.model.Conversions;
import com.ibm.mfp.adapters.sample.model.Enrichments;
import com.ibm.mfp.adapters.sample.model.Normalizations;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * A custom configuration for the environment.
 */
@ApiModel(description = "A custom configuration for the environment.")
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-06-21T18:39:34.122+05:30")
public class ModelConfiguration   {
  @JsonProperty("configuration_id")
  private String configurationId = null;

  @JsonProperty("name")
  private String name = "";

  @JsonProperty("created")
  private DateTime created = null;

  @JsonProperty("updated")
  private DateTime updated = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("conversions")
  private Conversions conversions = null;

  @JsonProperty("enrichments")
  private Enrichments enrichments = null;

  @JsonProperty("normalizations")
  private Normalizations normalizations = null;

   /**
   * The unique identifier of the configuration
   * @return configurationId
  **/
  @JsonProperty("configuration_id")
  @ApiModelProperty(value = "The unique identifier of the configuration")
  public String getConfigurationId() {
    return configurationId;
  }

  public ModelConfiguration name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the configuration
   * @return name
  **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "The name of the configuration")
  @NotNull
 @Size(min=0,max=255)  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * The creation date of the configuration in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
   * @return created
  **/
  @JsonProperty("created")
  @ApiModelProperty(value = "The creation date of the configuration in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
  public DateTime getCreated() {
    return created;
  }

   /**
   * The timestamp of when the configuration was last updated in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
   * @return updated
  **/
  @JsonProperty("updated")
  @ApiModelProperty(value = "The timestamp of when the configuration was last updated in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
  public DateTime getUpdated() {
    return updated;
  }

  public ModelConfiguration description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the configuration, if available
   * @return description
  **/
  @JsonProperty("description")
  @ApiModelProperty(value = "The description of the configuration, if available")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ModelConfiguration conversions(Conversions conversions) {
    this.conversions = conversions;
    return this;
  }

   /**
   * An array of document conversion settings for the configuration
   * @return conversions
  **/
  @JsonProperty("conversions")
  @ApiModelProperty(value = "An array of document conversion settings for the configuration")
  public Conversions getConversions() {
    return conversions;
  }

  public void setConversions(Conversions conversions) {
    this.conversions = conversions;
  }

  public ModelConfiguration enrichments(Enrichments enrichments) {
    this.enrichments = enrichments;
    return this;
  }

   /**
   * An array of document enrichment settings for the configuration
   * @return enrichments
  **/
  @JsonProperty("enrichments")
  @ApiModelProperty(value = "An array of document enrichment settings for the configuration")
  public Enrichments getEnrichments() {
    return enrichments;
  }

  public void setEnrichments(Enrichments enrichments) {
    this.enrichments = enrichments;
  }

  public ModelConfiguration normalizations(Normalizations normalizations) {
    this.normalizations = normalizations;
    return this;
  }

   /**
   * An array of document normalization settings for the configuration
   * @return normalizations
  **/
  @JsonProperty("normalizations")
  @ApiModelProperty(value = "An array of document normalization settings for the configuration")
  public Normalizations getNormalizations() {
    return normalizations;
  }

  public void setNormalizations(Normalizations normalizations) {
    this.normalizations = normalizations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelConfiguration _configuration = (ModelConfiguration) o;
    return Objects.equals(this.configurationId, _configuration.configurationId) &&
        Objects.equals(this.name, _configuration.name) &&
        Objects.equals(this.created, _configuration.created) &&
        Objects.equals(this.updated, _configuration.updated) &&
        Objects.equals(this.description, _configuration.description) &&
        Objects.equals(this.conversions, _configuration.conversions) &&
        Objects.equals(this.enrichments, _configuration.enrichments) &&
        Objects.equals(this.normalizations, _configuration.normalizations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configurationId, name, created, updated, description, conversions, enrichments, normalizations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelConfiguration {\n");
    
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    conversions: ").append(toIndentedString(conversions)).append("\n");
    sb.append("    enrichments: ").append(toIndentedString(enrichments)).append("\n");
    sb.append("    normalizations: ").append(toIndentedString(normalizations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

