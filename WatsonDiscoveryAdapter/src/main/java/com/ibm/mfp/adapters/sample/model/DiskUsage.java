/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Discovery
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * Summary of the disk usage statistics for this environment
 */
@ApiModel(description = "Summary of the disk usage statistics for this environment")
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-06-21T18:39:34.122+05:30")
public class DiskUsage   {
  @JsonProperty("used_bytes")
  private Integer usedBytes = null;

  @JsonProperty("total_bytes")
  private BigDecimal totalBytes = null;

  @JsonProperty("used")
  private String used = null;

  @JsonProperty("total")
  private String total = null;

  @JsonProperty("percent_used")
  private Double percentUsed = null;

   /**
   * Number of bytes used on the environment's disk capacity
   * @return usedBytes
  **/
  @JsonProperty("used_bytes")
  @ApiModelProperty(value = "Number of bytes used on the environment's disk capacity")
  public Integer getUsedBytes() {
    return usedBytes;
  }

   /**
   * Total number of bytes available in the environment's disk capacity
   * @return totalBytes
  **/
  @JsonProperty("total_bytes")
  @ApiModelProperty(value = "Total number of bytes available in the environment's disk capacity")
  public BigDecimal getTotalBytes() {
    return totalBytes;
  }

   /**
   * Amount of disk capacity used, in KB or GB format
   * @return used
  **/
  @JsonProperty("used")
  @ApiModelProperty(value = "Amount of disk capacity used, in KB or GB format")
  public String getUsed() {
    return used;
  }

   /**
   * Total amount of the environment's disk capacity, in KB or GB format
   * @return total
  **/
  @JsonProperty("total")
  @ApiModelProperty(value = "Total amount of the environment's disk capacity, in KB or GB format")
  public String getTotal() {
    return total;
  }

   /**
   * Percentage of the environment's disk capacity that is being used
   * @return percentUsed
  **/
  @JsonProperty("percent_used")
  @ApiModelProperty(value = "Percentage of the environment's disk capacity that is being used")
  public Double getPercentUsed() {
    return percentUsed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiskUsage diskUsage = (DiskUsage) o;
    return Objects.equals(this.usedBytes, diskUsage.usedBytes) &&
        Objects.equals(this.totalBytes, diskUsage.totalBytes) &&
        Objects.equals(this.used, diskUsage.used) &&
        Objects.equals(this.total, diskUsage.total) &&
        Objects.equals(this.percentUsed, diskUsage.percentUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(usedBytes, totalBytes, used, total, percentUsed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiskUsage {\n");
    
    sb.append("    usedBytes: ").append(toIndentedString(usedBytes)).append("\n");
    sb.append("    totalBytes: ").append(toIndentedString(totalBytes)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    percentUsed: ").append(toIndentedString(percentUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

