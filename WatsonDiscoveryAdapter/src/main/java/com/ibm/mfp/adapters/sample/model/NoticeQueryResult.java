/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Discovery
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.mfp.adapters.sample.model.Notice;
import com.ibm.mfp.adapters.sample.model.QueryResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * NoticeQueryResult
 */
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-06-21T18:39:34.122+05:30")
public class NoticeQueryResult   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("score")
  private Double score = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  @JsonProperty("notice_id")
  private String noticeId = null;

  @JsonProperty("created")
  private DateTime created = null;

  @JsonProperty("document_id")
  private String documentId = null;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
   * Severity level of the notice
   */
  public enum SeverityEnum {
    WARNING("warning"),
    
    ERROR("error");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("severity")
  private SeverityEnum severity = null;

  @JsonProperty("step")
  private String step = null;

  @JsonProperty("description")
  private String description = null;

  public NoticeQueryResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the document.
   * @return id
  **/
  @JsonProperty("id")
  @ApiModelProperty(value = "The unique identifier of the document.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NoticeQueryResult score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * The confidence score of the result's analysis. Scores range from 0 to 1, with a higher score indicating greater confidence.
   * @return score
  **/
  @JsonProperty("score")
  @ApiModelProperty(value = "The confidence score of the result's analysis. Scores range from 0 to 1, with a higher score indicating greater confidence.")
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }

  public NoticeQueryResult metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata of the document.
   * @return metadata
  **/
  @JsonProperty("metadata")
  @ApiModelProperty(value = "Metadata of the document.")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public NoticeQueryResult noticeId(String noticeId) {
    this.noticeId = noticeId;
    return this;
  }

   /**
   * Identifies the notice. Many notices may have the same ID. This field exists so that user applications can programatically identify a notice and take automatic corrective action.
   * @return noticeId
  **/
  @JsonProperty("notice_id")
  @ApiModelProperty(value = "Identifies the notice. Many notices may have the same ID. This field exists so that user applications can programatically identify a notice and take automatic corrective action.")
  public String getNoticeId() {
    return noticeId;
  }

  public void setNoticeId(String noticeId) {
    this.noticeId = noticeId;
  }

  public NoticeQueryResult created(DateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The creation date of the collection in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
   * @return created
  **/
  @JsonProperty("created")
  @ApiModelProperty(value = "The creation date of the collection in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
  public DateTime getCreated() {
    return created;
  }

  public void setCreated(DateTime created) {
    this.created = created;
  }

  public NoticeQueryResult documentId(String documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Unique identifier of the ingested document
   * @return documentId
  **/
  @JsonProperty("document_id")
  @ApiModelProperty(value = "Unique identifier of the ingested document")
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public NoticeQueryResult severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Severity level of the notice
   * @return severity
  **/
  @JsonProperty("severity")
  @ApiModelProperty(value = "Severity level of the notice")
  public SeverityEnum getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  public NoticeQueryResult step(String step) {
    this.step = step;
    return this;
  }

   /**
   * Ingestion step in which the notice occurred
   * @return step
  **/
  @JsonProperty("step")
  @ApiModelProperty(value = "Ingestion step in which the notice occurred")
  public String getStep() {
    return step;
  }

  public void setStep(String step) {
    this.step = step;
  }

  public NoticeQueryResult description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the notice
   * @return description
  **/
  @JsonProperty("description")
  @ApiModelProperty(value = "The description of the notice")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NoticeQueryResult noticeQueryResult = (NoticeQueryResult) o;
    return Objects.equals(this.id, noticeQueryResult.id) &&
        Objects.equals(this.score, noticeQueryResult.score) &&
        Objects.equals(this.metadata, noticeQueryResult.metadata) &&
        Objects.equals(this.noticeId, noticeQueryResult.noticeId) &&
        Objects.equals(this.created, noticeQueryResult.created) &&
        Objects.equals(this.documentId, noticeQueryResult.documentId) &&
        Objects.equals(this.severity, noticeQueryResult.severity) &&
        Objects.equals(this.step, noticeQueryResult.step) &&
        Objects.equals(this.description, noticeQueryResult.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, score, metadata, noticeId, created, documentId, severity, step, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NoticeQueryResult {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    noticeId: ").append(toIndentedString(noticeId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    step: ").append(toIndentedString(step)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

