{
  "swagger": "2.0",
  "info": {
    "title": "Natural Language Understanding",
    "version": "1.0",
    "description": "Analyze various features of text content at scale. Provide text, raw HTML, or a public URL, and IBM Watson Natural Language Understanding will give you results for the features you request. The service cleans HTML content before analysis by default, so the results can ignore most advertisements and other unwanted content.\r\n\r\n### Concepts\r\nIdentify general concepts that are referenced or alluded to in your content. Concepts that are detected typically have an associated link to a DBpedia resource.\r\n\r\n### Entities\r\nDetect important people, places, geopolitical entities and other types of entities in your content. Entity detection recognizes consecutive coreferences of each entity. For example, analysis of the following text would count \"Barack Obama\" and \"He\" as the same entity:\r\n\r\n\"Barack Obama was the 44th President of the United States. He took office in January 2009.\"\r\n\r\n### Keywords\r\nDetermine the most important keywords in your content. Keyword phrases are organized by relevance in the results.\r\n\r\n### Categories\r\nCategorize your content into a hierarchical 5-level taxonomy. For example, \"Leonardo DiCaprio won an Oscar\" returns \"/art and entertainment/movies and tv/movies\" as the most confident classification.\r\n\r\n### Sentiment\r\nDetermine whether your content conveys postive or negative sentiment. Sentiment information can be returned for detected entities, keywords, or user-specified target phrases found in the text.\r\n\r\n### Emotion\r\nDetect anger, disgust, fear, joy, or sadness that is conveyed by your content. Emotion information can be returned for detected entities, keywords, or user-specified target phrases found in the text.\r\n\r\n### Relations\r\nRecognize when two entities are related, and identify the type of relation.  For example, you can identify an \"awardedTo\" relation between an award and its recipient.\r\n\r\n### Semantic Roles\r\nParse sentences into subject-action-object form, and identify entities and keywords that are subjects or objects of an action.\r\n\r\n### Metadata\r\nGet author information, publication date, and the title of your text/HTML content.\r\n",
    "x-sdk-schema": "https://watson-api-explorer.mybluemix.net/sdk-extensions/sdk-extensions-0.3-schema.json"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
 "securityDefinitions": {
    "basicAuth": {
      "type": "basic",
      "description": "HTTP Basic Authentication."
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "host": "gateway.watsonplatform.net",
    "schemes": [
     "https"
   ],
  "basePath": "/natural-language-understanding/api",
  "paths": {
    "/v1/analyze": {
      "get": {
        "operationId": "analyzeGet",
        "summary": "Analyze text, HTML, or a public webpage",
        "description": "Analyzes text, HTML, or a public webpage with one or more text analysis features.",
        "parameters": [
          {
            "$ref": "#/parameters/version"
          },
          {
            "$ref": "#/parameters/text"
          },
          {
            "$ref": "#/parameters/html"
          },
          {
            "$ref": "#/parameters/url"
          },
          {
            "$ref": "#/parameters/features"
          },
          {
            "$ref": "#/parameters/return_analyzed_text"
          },
          {
            "$ref": "#/parameters/clean"
          },
          {
            "$ref": "#/parameters/xpath"
          },
          {
            "$ref": "#/parameters/fallback_to_raw"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/concepts.limit"
          },
          {
            "$ref": "#/parameters/emotion.document"
          },
          {
            "$ref": "#/parameters/emotion.targets"
          },
          {
            "$ref": "#/parameters/entities.limit"
          },
          {
            "$ref": "#/parameters/entities.model"
          },
          {
            "$ref": "#/parameters/entities.emotion"
          },
          {
            "$ref": "#/parameters/entities.sentiment"
          },
          {
            "$ref": "#/parameters/keywords.limit"
          },
          {
            "$ref": "#/parameters/keywords.emotion"
          },
          {
            "$ref": "#/parameters/keywords.sentiment"
          },
          {
            "$ref": "#/parameters/relations.model"
          },
          {
            "$ref": "#/parameters/semantic_roles.limit"
          },
          {
            "$ref": "#/parameters/semantic_roles.entities"
          },
          {
            "$ref": "#/parameters/semantic_roles.keywords"
          },
          {
            "$ref": "#/parameters/sentiment.document"
          },
          {
            "$ref": "#/parameters/sentiment.targets"
          }
        ],
        "tags": [
          "Analyze"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AnalysisResults"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [{
              "name": "Example request",
              "example": "curl -X GET \\\n-u \"%USERNAME%\":\"%PASSWORD%\" \\\n-d \"version=2016-05-17\" \\\n-d \"url=www.ibm.com\" \\\n-d \"features=entities,keywords\" \\\n-d \"entities.emotion=true\" \"https://gateway.watsonplatform.net/natural-language-understanding/api/v1/analyze\"",
              "response": {
                "$ref": "#/responses/AnalysisResults"
              }
            }]
          },
          "exclude" : ["java", "swift"]
        }
      },
      "post": {
        "operationId": "analyze",
        "tags": [
          "Analyze"
        ],
        "summary": "Analyze text, HTML, or a public webpage",
        "description": "Analyzes text, HTML, or a public webpage with one or more text analysis features.",
        "parameters": [
          {
            "$ref": "#/parameters/version"
          },
          {
            "$ref": "#/parameters/parameters"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AnalysisResults"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-sdk-operations": {
          "method": {
            "node": "analyze(params, callback())",
            "python": "analyze(features, text, url, html, clean, xpath, fallback_to_raw, return_analyzed_text, language)"
          },
          "description": {
            "common": "Analyzes text, HTML, or a public webpage with one or more text analysis features."
          },
          "parameters": {
            "common": [{
              "$ref": "#/parameters/features_object"
            }, {
              "$ref": "#/parameters/text"
            }, {
              "$ref": "#/parameters/url"
            }, {
              "$ref": "#/parameters/html"
            }, {
              "$ref": "#/parameters/clean"
            }, {
              "$ref": "#/parameters/xpath"
            }, {
              "$ref": "#/parameters/fallback_to_raw"
            }, {
              "$ref": "#/parameters/return_analyzed_text"
            }, {
              "$ref": "#/parameters/language"
            }]
          },
          "request-examples": {
            "curl": [{
              "name": "Example request",
              "example": "curl -X POST \\\n-H \"Content-Type: application/json\" \\\n-u \"%USERNAME%\":\"%PASSWORD%\" \\\n-d @parameters.json \"https://gateway.watsonplatform.net/natural-language-understanding/api/v1/analyze?version=2016-05-17\"",
              "additional_details": [{
                "name": "parameters.json",
                "value": "{\n  \"url\": \"www.ibm.com\",\n  \"features\": {\n    \"entities\": {\n      \"emotion\": true,\n      \"sentiment\": true,\n      \"limit\": 2\n    },\n    \"keywords\": {\n      \"emotion\": true,\n      \"sentiment\": true,\n      \"limit\": 2\n    }\n  }\n}"
              }],
              "response": {
                "$ref": "#/responses/AnalysisResults2"
              }
            }],
            "node": [{
              "name": "Example request",
              "example": "",
              "response": {
                "$ref": "#/responses/AnalysisResults2"
              }
            }
            ],
            "python": [{
              "name": "Example request",
              "example": "",
              "response": {
                "$ref": "#/responses/AnalysisResults2"
              }
            }]
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "operationId": "getModels",
        "tags": [
          "Model management"
        ],
        "summary": "List models",
        "description": "Lists available models for Relations and Entities features, including Watson Knowledge Studio custom models that you have created and linked to your Natural Language Understanding service.",
        "parameters": [
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "List models results",
            "schema": {
              "$ref": "#/definitions/ListModelsResults"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/models/{model_id}": {
      "delete": {
        "operationId": "deleteModel",
        "tags": [
          "Model management"
        ],
        "summary": "Delete model",
        "description": "Deletes a custom model",
        "parameters": [
          {
            "$ref": "#/parameters/version"
          },
          {
            "name": "model_id",
            "description": "model_id of the model to delete",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete model results",
            "schema": {
              "properties": {
                "deleted": {
                  "type": "string",
                  "description": "model_id of the deleted model"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "version": {
      "name": "version",
      "in": "query",
      "description": "The release date of the version of the API you want to use. Specify dates in YYYY-MM-DD format.",
      "required": true,
      "type": "string",
      "default": "2017-02-27",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
    },
    "text": {
      "name": "text",
      "description": "Text to analyze",
      "in": "query",
      "type": "string"
    },
    "html": {
      "name": "html",
      "description": "HTML to analyze",
      "in": "query",
      "type": "string"
    },
    "url": {
      "name": "url",
      "description": "Public webpage to analyze",
      "in": "query",
      "type": "string"
    },
    "language": {
      "name": "language",
      "description": "ISO 639-1 code indicating the language to use in the analysis",
      "in": "query",
      "type": "string"
    },
    "features": {
      "name": "features",
      "description": "Comma separated list of analysis features",
      "in": "query",
      "type": "array",
      "required": true,
      "items": {
        "type": "string"
      },
      "enum": [
        "concepts",
        "entities",
        "keywords",
        "categories",
        "emotion",
        "sentiment",
        "metadata",
        "relations",
        "semantic_roles"
      ]
    },
    "features_object": {
      "name": "features",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/Features"
      }
    },
    "clean": {
      "name": "clean",
      "description": "Set to false to disable text cleaning",
      "in": "query",
      "type": "boolean",
      "default": true
    },
    "xpath": {
      "name": "xpath",
      "description": "Xpath query for targeting nodes in HTML",
      "in": "query",
      "type": "string"
    },
    "fallback_to_raw": {
      "name": "fallback_to_raw",
      "description": "Whether to use raw HTML content if text cleaning fails",
      "in": "query",
      "type": "boolean",
      "default": true
    },
    "return_analyzed_text": {
      "name": "return_analyzed_text",
      "description": "Set this to true to show the analyzed text in the response",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "concepts.limit": {
      "name": "concepts.limit",
      "description": "Maximum number of concepts to return",
      "in": "query",
      "type": "integer",
      "default": 8
    },
    "concepts.linked_data": {
      "name": "concepts.linked_data",
      "description": "Set this to false to hide Linked Data results in the response",
      "in": "query",
      "type": "boolean",
      "default": true
    },
    "emotion.document": {
      "name": "emotion.document",
      "description": "Set this to false to hide document-level emotion results",
      "in": "query",
      "type": "boolean",
      "default": true
    },
    "emotion.targets": {
      "name": "emotion.targets",
      "description": "Target strings, separated by commas. Emotion results will be returned for each target string found in the document",
      "in": "query",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "entities.limit": {
      "name": "entities.limit",
      "description": "Maximum number of entities to return",
      "in": "query",
      "type": "integer",
      "default": 50
    },
    "entities.mentions": {
      "name": "entities.model",
      "description": "Set this to true to return the locations of detected entities",
      "in": "query",
      "type": "string"
    },
    "entities.model": {
      "name": "entities.model",
      "description": "Enter a custom model ID to override the standard entity detection model",
      "in": "query",
      "type": "string"
    },
    "entities.emotion": {
      "name": "entities.emotion",
      "description": "Set this to true to return emotion information for detected entities",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "entities.sentiment": {
      "name": "entities.sentiment",
      "description": "Set this to true to return sentiment information for detected entities",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "keywords.emotion": {
      "name": "keywords.emotion",
      "description": "Set this to true to return emotion information for detected keywords",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "keywords.limit": {
      "name": "keywords.limit",
      "description": "Maximum number of keywords to return",
      "in": "query",
      "type": "integer",
      "default": 50
    },
    "keywords.sentiment": {
      "name": "keywords.sentiment",
      "description": "Set this to true to return sentiment information for detected keywords",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "relations.model": {
      "name": "relations.model",
      "description": "Enter a custom model ID to override the default `en-news` relations model",
      "in": "query",
      "type": "string",
      "default": "en-news"
    },
    "semantic_roles.limit": {
      "name": "semantic_roles.limit",
      "description": "Maximum number of semantic_roles results to return",
      "in": "query",
      "type": "integer",
      "default": 50
    },
    "semantic_roles.entities": {
      "name": "semantic_roles.entities",
      "description": "Set this to true to return entity information for subjects and objects",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "semantic_roles.keywords": {
      "name": "semantic_roles.keywords",
      "description": "Set this to true to return keyword information for subjects and objects",
      "in": "query",
      "type": "boolean",
      "default": false
    },
    "sentiment.document": {
      "name": "sentiment.document",
      "description": "Set this to false to disable document level sentiment analysis",
      "in": "query",
      "type": "boolean",
      "default": true
    },
    "sentiment.targets": {
      "name": "sentiment.targets",
      "description": "Sentiment information will return for each target string that is found in the text",
      "in": "query",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "parameters": {
      "name": "parameters",
      "description": "An object containing request parameters. The `features` object and one of the `text`, `html`, or `url` attributes are required.",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/Parameters"
      }
    }
  },
  "definitions": {
    "Parameters": {
      "description": "An object containing request parameters",
      "type": "object",
      "required": [
        "features"
      ],
      "properties": {
        "text": {
          "description": "The plain text to analyze",
          "type": "string"
        },
        "html": {
          "description": "The HTML file to analyze",
          "type": "string"
        },
        "url": {
          "description": "The web page to analyze",
          "type": "string"
        },
        "features": {
          "description": "Specific features to analyze the document for",
          "$ref": "#/definitions/Features"
        },
        "clean": {
          "description": "Remove website elements, such as links, ads, etc",
          "type": "boolean",
          "default": true
        },
        "xpath": {
          "type": "string",
          "description": "XPath query for targeting nodes in HTML"
        },
        "fallback_to_raw": {
          "type": "boolean",
          "description": "Whether to use raw HTML content if text cleaning fails",
          "default": true
        },
        "return_analyzed_text": {
          "type": "boolean",
          "description": "Whether or not to return the analyzed text",
          "default": false
        },
        "language": {
          "type": "string",
          "description": "ISO 639-1 code indicating the language to use in the analysis"
        }
      },
      "x-java-builder" : true
    },
    "Features": {
      "description": "Analysis features and options",
      "type": "object",
      "properties": {
        "concepts": {
          "description": "Whether or not to return the concepts that are mentioned in the analyzed text",
          "$ref": "#/definitions/ConceptsOptions"
        },
        "emotion": {
          "description": "Whether or not to extract the emotions implied in the analyzed text",
          "$ref": "#/definitions/EmotionOptions"
        },
        "entities": {
          "description": "Whether or not to extract detected entity objects from the analyzed text",
          "$ref": "#/definitions/EntitiesOptions"
        },
        "keywords": {
          "description": "Whether or not to return the keywords in the analyzed text",
          "$ref": "#/definitions/KeywordsOptions"
        },
        "metadata": {
          "description": "Whether or not the author, publication date, and title of the analyzed text should be returned. This parameter is only available for URL and HTML input",
          "$ref": "#/definitions/MetadataOptions"
        },
        "relations": {
          "description": "Whether or not to return the relationships between detected entities in the analyzed text",
          "$ref": "#/definitions/RelationsOptions"
        },
        "semantic_roles": {
          "description": "Whether or not to return the subject-action-object relations from the analyzed text",
          "$ref": "#/definitions/SemanticRolesOptions"
        },
        "sentiment": {
          "description": "Whether or not to return the overall sentiment of the analyzed text",
          "$ref": "#/definitions/SentimentOptions"
        },
        "categories": {
          "description": "Whether or not to return the high level category the content is categorized as (i.e. news, art)",
          "$ref": "#/definitions/CategoriesOptions"
        }
      },
      "x-java-builder" : true
    },
    "ListModelsResults": {
      "description": "Models available for Relations and Entities features",
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        }
      }
    },
    "Model": {
      "description": "",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Shows as available if the model is ready for use"
        },
        "model_id": {
          "type": "string",
          "description": "Unique model ID"
        },
        "language": {
          "type": "string",
          "description": "ISO 639-1 code indicating the language of the model"
        },
        "description": {
          "type": "string",
          "description": "Model description"
        }
      }
    },
    "AnalysisResults": {
      "description": "Results of the analysis, organized by feature",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Language used to analyze the text"
            },
            "analyzed_text": {
              "type": "string",
              "description": "Text that was used in the analysis"
            },
            "retrieved_url": {
              "type": "string",
              "description": "URL that was used to retrieve HTML content"
            },
            "usage": {
              "type": "object",
              "description": "API usage information for the request",
              "$ref": "#/definitions/Usage"
            }
          }
        },
        {
          "$ref": "#/definitions/FeaturesResults"
        }
      ]
    },
    "Usage": {
      "description": "Usage information",
      "type": "object",
      "properties": {
        "features": {
          "type": "integer",
          "description": "Number of features used in the API call"
        }
      }
    },
    "FeaturesResults": {
      "description": "Analysis results for each requested feature",
      "type": "object",
      "properties": {
        "concepts": {
          "description": "The general concepts referenced or alluded to in the specified content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptsResult"
          }
        },
        "entities": {
          "description": "The important entities in the specified content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitiesResult"
          }
        },
        "keywords": {
          "description": "The important keywords in content organized by relevance",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeywordsResult"
          }
        },
        "categories": {
          "description": "The hierarchical 5-level taxonomy the content is categorized into",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoriesResult"
          }
        },
        "emotion": {
          "description": "The anger, disgust, fear, joy, or sadness conveyed by the content",
          "$ref": "#/definitions/EmotionResult"
        },
        "metadata": {
          "description": "The metadata holds author information, publication date and the title of the text/HTML content",
          "type": "object",
          "$ref": "#/definitions/MetadataResult"
        },
        "relations": {
          "description": "The relationships between entities in the content",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationsResult"
          }
        },
        "semantic_roles": {
          "description": "The subjects of actions and the objects the actions act upon",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticRolesResult"
          }
        },
        "sentiment": {
          "description": "The sentiment of the content",
          "$ref": "#/definitions/SentimentResult"
        }
      }
    },
    "ConceptsResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ConceptsResult"
      }
    },
    "ConceptsResult": {
      "description": "The general concepts referenced or alluded to in the specified content",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Name of the concept"
        },
        "relevance": {
          "type": "number",
          "description": "Relevance score between 0 and 1. Higher scores indicate greater relevance"
        },
        "dbpedia_resource": {
          "description": "Link to the corresponding DBpedia resource",
          "$ref": "#/definitions/DBpediaResource"
        }
      }
    },
    "DBpediaResource": {
      "type": "string",
      "description": "Link to the corresponding DBpedia resource"
    },
    "DisambiguationResult": {
      "description": "Disambiguation information for the entity",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Common entity name"
        },
        "dbpedia_resource": {
          "description": "Link to the corresponding DBpedia resource",
          "$ref": "#/definitions/DBpediaResource"
        },
        "subtype": {
          "type": "array",
          "description": "Entity subtype information",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LinkedDataResult": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Name of the Linked Data source"
        },
        "link": {
          "type": "string",
          "description": "URL to the Linked Data page"
        }
      }
    },
    "EntitiesResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntitiesResult"
      }
    },
    "EntitiesResult": {
      "description": "The important people, places, geopolitical entities and other types of entities in your content",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Entity type"
        },
        "relevance": {
          "type": "number",
          "description": "Relevance score from 0 to 1. Higher values indicate greater relevance"
        },
        "count": {
          "type": "integer",
          "description": "How many times the entity was mentioned in the text"
        },
        "text": {
          "type": "string",
          "description": "The name of the entity"
        },
        "emotion": {
          "description": "Emotion analysis results for the entity, enabled with the \"emotion\" option",
          "$ref": "#/definitions/EmotionScores"
        },
        "sentiment": {
          "description": "Sentiment analysis results for the entity, enabled with the \"sentiment\" option",
          "$ref": "#/definitions/FeatureSentimentResults"
        },
        "disambiguation": {
          "description": "Disambiguation information for the entity",
          "$ref": "#/definitions/DisambiguationResult"
        }
      }
    },
    "KeywordsResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/KeywordsResult"
      }
    },
    "KeywordsResult": {
      "type": "object",
      "description": "The most important keywords in the content, organized by relevance",
      "properties": {
        "relevance": {
          "type": "number",
          "description": "Relevance score from 0 to 1. Higher values indicate greater relevance"
        },
        "text": {
          "type": "string",
          "description": "The keyword text"
        },
        "emotion": {
          "description": "Emotion analysis results for the keyword, enabled with the \"emotion\" option",
          "$ref": "#/definitions/EmotionScores"
        },
        "sentiment": {
          "description": "Sentiment analysis results for the keyword, enabled with the \"sentiment\" option",
          "$ref": "#/definitions/FeatureSentimentResults"
        }
      }
    },
    "CategoriesResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CategoriesResult"
      }
    },
    "CategoriesResult": {
      "description": "The hierarchical 5-level taxonomy the content is categorized into",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "The path to the category through the taxonomy hierarchy"
        },
        "score": {
          "type": "number",
          "description": "Confidence score for the category classification. Higher values indicate greater confidence."
        }
      }
    },
    "EmotionResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EmotionResult"
      }
    },
    "EmotionResult": {
      "type": "object",
      "description": "The detected anger, disgust, fear, joy, or sadness that is conveyed by the content. Emotion information can be returned for detected entities, keywords, or user-specified target phrases found in the text",
      "properties": {
        "document": {
          "description": "The returned emotion results across the document",
          "$ref": "#/definitions/DocumentEmotionResults"
        },
        "targets": {
          "type": "array",
          "description": "The returned emotion results per specified target",
          "items": {
            "$ref": "#/definitions/TargetedEmotionResults"
          }
        }
      }
    },
    "DocumentEmotionResults": {
      "type": "object",
      "description": "An object containing the emotion results of a document",
      "properties": {
        "emotion": {
          "description": "An object containing the emotion results for the document",
          "$ref": "#/definitions/EmotionScores"
        }
      }
    },
    "TargetedEmotionResults": {
      "type": "object",
      "description": "An object containing the emotion results for the target",
      "properties": {
        "text": {
          "type": "string",
          "description": "Targeted text"
        },
        "emotion": {
          "description": "An object containing the emotion results for the target",
          "$ref": "#/definitions/EmotionScores"
        }
      }
    },
    "EmotionScores": {
      "type": "object",
      "properties": {
        "anger": {
          "type": "number",
          "description": "Anger score from 0 to 1. A higher score means that the text is more likely to convey anger"
        },
        "disgust": {
          "type": "number",
          "description": "Disgust score from 0 to 1. A higher score means that the text is more likely to convey disgust"
        },
        "fear": {
          "type": "number",
          "description": "Fear score from 0 to 1. A higher score means that the text is more likely to convey fear"
        },
        "joy": {
          "type": "number",
          "description": "Joy score from 0 to 1. A higher score means that the text is more likely to convey joy"
        },
        "sadness": {
          "type": "number",
          "description": "Sadness score from 0 to 1. A higher score means that the text is more likely to convey sadness"
        }
      }
    },
    "MetadataResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MetadataResult"
      }
    },
    "MetadataResult": {
      "description": "The Authors, Publication Date, and Title of the document. Supports URL and HTML input types",
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "description": "The authors of the document",
          "items": {
            "$ref": "#/definitions/Author"
          }
        },
        "publication_date": {
          "type": "string",
          "description": "The publication date in the format ISO 8601"
        },
        "title": {
          "type": "string",
          "description": "The title of the document"
        }
      }
    },
    "Author": {
      "type": "object",
      "description": "The author of the analyzed content",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the author"
        }
      }
    },
    "RelationsResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RelationsResult"
      }
    },
    "RelationsResult": {
      "type": "object",
      "description": "The relations between entities found in the content",
      "properties": {
        "score": {
          "type": "number",
          "description": "Confidence score for the relation. Higher values indicate greater confidence."
        },
        "sentence": {
          "type": "string",
          "description": "The sentence that contains the relation"
        },
        "type": {
          "type": "string",
          "description": "The type of the relation"
        },
        "arguments": {
          "type": "array",
          "description": "The extracted relation objects from the text",
          "items": {
            "$ref": "#/definitions/RelationArgument"
          }
        }
      }
    },
    "RelationArgument": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationEntity"
          }
        },
        "text": {
          "type": "string",
          "description": "Text that corresponds to the argument"
        }
      }
    },
    "RelationEntity": {
      "type": "object",
      "description": "The entities extracted from a sentence in a given document",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text that corresponds to the entity"
        },
        "type": {
          "type": "string",
          "description": "Entity type"
        }
      }
    },
    "SemanticRolesResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SemanticRolesResult"
      }
    },
    "SemanticRolesResult": {
      "type": "object",
      "description": "The object containing the actions and the objects the actions act upon",
      "properties": {
        "sentence": {
          "type": "string",
          "description": "Sentence from the source that contains the subject, action, and object"
        },
        "subject": {
          "type": "object",
          "description": "The extracted subject from the sentence",
          "$ref": "#/definitions/SemanticRolesSubject"
        },
        "action": {
          "type": "object",
          "description": "The extracted action from the sentence",
          "$ref": "#/definitions/SemanticRolesAction"
        },
        "object": {
          "type": "object",
          "description": "The extracted object from the sentence",
          "$ref": "#/definitions/SemanticRolesObject"
        }
      }
    },
    "SemanticRolesEntity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Entity type"
        },
        "text": {
          "type": "string",
          "description": "The entity text"
        }
      }
    },
    "SemanticRolesKeyword": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The keyword text"
        }
      }
    },
    "SemanticRolesSubject": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text that corresponds to the subject role"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticRolesEntity"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticRolesKeyword"
          }
        }
      }
    },
    "SemanticRolesAction": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Analyzed text that corresponds to the action"
        },
        "normalized": {
          "type": "string",
          "description": "normalized version of the action"
        },
        "verb": {
          "$ref": "#/definitions/SemanticRolesVerb"
        }
      }
    },
    "SemanticRolesObject": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Object text"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticRolesKeyword"
          }
        }
      }
    },
    "SemanticRolesVerb": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The keyword text"
        },
        "tense": {
          "type": "string",
          "description": "Verb tense"
        }
      }
    },
    "SentimentResults": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SentimentResult"
      }
    },
    "SentimentResult": {
      "type": "object",
      "description": "The sentiment of the content",
      "properties": {
        "document": {
          "description": "The document level sentiment",
          "$ref": "#/definitions/DocumentSentimentResults"
        },
        "targets": {
          "type": "array",
          "description": "The targeted sentiment to analyze",
          "items": {
            "$ref": "#/definitions/TargetedSentimentResults"
          }
        }
      }
    },
    "DocumentSentimentResults": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Sentiment score from -1 (negative) to 1 (positive)"
        }
      }
    },
    "FeatureSentimentResults": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Sentiment score from -1 (negative) to 1 (positive)"
        }
      }
    },
    "TargetedSentimentResults": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Targeted text"
        },
        "score": {
          "type": "number",
          "description": "Sentiment score from -1 (negative) to 1 (positive)"
        }
      }
    },
    "ConceptsOptions": {
      "type": "object",
      "description": "Whether or not to analyze content for general concepts that are referenced or alluded to",
      "properties": {
        "limit": {
          "type": "integer",
          "default": 8,
          "description": "Maximum number of concepts to return"
        }
      },
      "x-java-builder" : true
    },
    "EmotionOptions": {
      "type": "object",
      "description": "Whether or not to return emotion analysis of the content",
      "properties": {
        "document": {
          "type": "boolean",
          "default": true,
          "description": "Set this to false to hide document-level emotion results"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Emotion results will be returned for each target string that is found in the document"
        }
      },
      "x-java-builder" : true
    },
    "EntitiesOptions": {
      "type": "object",
      "description": "Whether or not to return important people, places, geopolitical, and other entities detected in the analyzed content",
      "properties": {
        "limit": {
          "type": "integer",
          "default": 50,
          "description": "Maximum number of entities to return"
        },
        "model": {
          "type": "string",
          "default": "alchemy",
          "description": "Enter a custom model ID to override the standard entity detection model"
        },
        "sentiment": {
          "type": "boolean",
          "default": false,
          "description": "Set this to true to return sentiment information for detected entities"
        },
        "emotion": {
          "type": "boolean",
          "default": false,
          "description": "Set this to true to analyze emotion for detected keywords"
        }
      },
      "x-java-builder" : true
    },
    "KeywordsOptions": {
      "type": "object",
      "description": "An option indicating whether or not important keywords from the analyzed content should be returned",
      "properties": {
        "limit": {
          "type": "integer",
          "default": 50,
          "description": "Maximum number of keywords to return"
        },
        "sentiment": {
          "type": "boolean",
          "default": false,
          "description": "Set this to true to return sentiment information for detected keywords"
        },
        "emotion": {
          "type": "boolean",
          "default": false,
          "description": "Set this to true to analyze emotion for detected keywords"
        }
      },
      "x-java-builder" : true
    },
    "MetadataOptions": {
      "type": "object",
      "description": "The Authors, Publication Date, and Title of the document. Supports URL and HTML input types",
      "properties": {}
    },
    "RelationsOptions": {
      "type": "object",
      "description": "An option specifying if the relationships found between entities in the analyzed content should be returned",
      "properties": {
        "model": {
          "type": "string",
          "description": "Enter a custom model ID to override the default model"
        }
      },
      "x-java-builder" : true
    },
    "SemanticRolesOptions": {
      "type": "object",
      "description": "An option specifying whether or not to identify the subjects, actions, and verbs in the analyzed content",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Maximum number of semantic_roles results to return",
          "default": 50
        },
        "keywords": {
          "type": "boolean",
          "description": "Set this to true to return keyword information for subjects and objects",
          "default": false
        },
        "entities": {
          "type": "boolean",
          "description": "Set this to true to return entity information for subjects and objects",
          "default": false
        }
      },
      "x-java-builder" : true
    },
    "SentimentOptions": {
      "type": "object",
      "description": "An option specifying if sentiment of detected entities, keywords, or phrases should be returned",
      "properties": {
        "document": {
          "type": "boolean",
          "default": true,
          "description": "Set this to false to hide document-level sentiment results"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Sentiment results will be returned for each target string that is found in the document"
        }
      },
      "x-java-builder" : true
    },
    "CategoriesOptions": {
      "type": "object",
      "description": "The hierarchical 5-level taxonomy the content is categorized into",
      "properties": {}
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "code",
        "error"
      ],
      "properties": {
        "code": {
          "description": "The HTTP error status code",
          "type": "integer"
        },
        "error": {
          "description": "A message describing the error",
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "AnalysisResults": {
      "description": "Analysis results",
      "examples": {
        "entities": [
          {
            "type": "Company",
            "relevance": 0.89792,
            "count": 12,
            "name": "IBM",
            "disambiguation": {
              "name": "IBM",
              "dbpedia_resource": "http://dbpedia.org/resource/IBM",
              "subtype": [
                "SoftwareLicense",
                "OperatingSystemDeveloper",
                "ProcessorManufacturer",
                "SoftwareDeveloper",
                "CompanyFounder",
                "ProgrammingLanguageDesigner",
                "ProgrammingLanguageDeveloper"
              ]
            },
            "emotion": {
              "sadness": 0.271362,
              "joy": 0.618694,
              "fear": 0.033186,
              "disgust": 0.056113,
              "anger": 0.099437
            }
          }
        ],
        "keywords": [
          {
            "emotion": {
              "sadness": 0.174379,
              "joy": 0.66067,
              "fear": 0.051475,
              "disgust": 0.114401,
              "anger": 0.044105
            },
            "relevance": "0.900808",
            "sentiment": {
              "score": 0.419889
            },
            "text": "free trial"
          }
        ],
        "language": "en",
        "retrieved_url": "https://www.ibm.com/us-en/"
      },
      "schema": {
        "$ref": "#/definitions/AnalysisResults"
      }
    },
    "AnalysisResults2": {
      "description": "Analysis results",
      "examples": {
        "entities": [
          {
            "type": "Company",
            "relevance": 0.89792,
            "count": 12,
            "name": "IBM",
            "disambiguation": {
              "name": "IBM",
              "dbpedia_resource": "http://dbpedia.org/resource/IBM",
              "subtype": [
                "SoftwareLicense",
                "OperatingSystemDeveloper",
                "ProcessorManufacturer",
                "SoftwareDeveloper",
                "CompanyFounder",
                "ProgrammingLanguageDesigner",
                "ProgrammingLanguageDeveloper"
              ]
            },
            "emotion": {
              "sadness": 0.271362,
              "joy": 0.618694,
              "fear": 0.033186,
              "disgust": 0.056113,
              "anger": 0.099437
            }
          }
        ],
        "keywords": [
          {
            "emotion": {
              "sadness": 0.174379,
              "joy": 0.66067,
              "fear": 0.051475,
              "disgust": 0.114401,
              "anger": 0.044105
            },
            "relevance": "0.900808",
            "sentiment": {
              "score": 0.419889
            },
            "text": "free trial"
          }
        ],
        "language": "en",
        "retrieved_url": "https://www.ibm.com/us-en/"
      },
      "schema": {
        "$ref": "#/definitions/AnalysisResults"
      }
    }
  }
}
