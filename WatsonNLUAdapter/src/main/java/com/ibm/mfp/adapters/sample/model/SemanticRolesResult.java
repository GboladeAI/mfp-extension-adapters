/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/*
 * Natural Language Understanding
 * Analyze various features of text content at scale. Provide text, raw HTML, or a public URL, and IBM Watson Natural Language Understanding will give you results for the features you request. The service cleans HTML content before analysis by default, so the results can ignore most advertisements and other unwanted content.    ### Concepts  Identify general concepts that are referenced or alluded to in your content. Concepts that are detected typically have an associated link to a DBpedia resource.    ### Entities  Detect important people, places, geopolitical entities and other types of entities in your content. Entity detection recognizes consecutive coreferences of each entity. For example, analysis of the following text would count \"Barack Obama\" and \"He\" as the same entity:    \"Barack Obama was the 44th President of the United States. He took office in January 2009.\"    ### Keywords  Determine the most important keywords in your content. Keyword phrases are organized by relevance in the results.    ### Categories  Categorize your content into a hierarchical 5-level taxonomy. For example, \"Leonardo DiCaprio won an Oscar\" returns \"/art and entertainment/movies and tv/movies\" as the most confident classification.    ### Sentiment  Determine whether your content conveys postive or negative sentiment. Sentiment information can be returned for detected entities, keywords, or user-specified target phrases found in the text.    ### Emotion  Detect anger, disgust, fear, joy, or sadness that is conveyed by your content. Emotion information can be returned for detected entities, keywords, or user-specified target phrases found in the text.    ### Relations  Recognize when two entities are related, and identify the type of relation.  For example, you can identify an \"awardedTo\" relation between an award and its recipient.    ### Semantic Roles  Parse sentences into subject-action-object form, and identify entities and keywords that are subjects or objects of an action.    ### Metadata  Get author information, publication date, and the title of your text/HTML content.  
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ibm.mfp.adapters.sample.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.ibm.mfp.adapters.sample.model.SemanticRolesAction;
import com.ibm.mfp.adapters.sample.model.SemanticRolesObject;
import com.ibm.mfp.adapters.sample.model.SemanticRolesSubject;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/*
 *  IBM Confidential OCO Source Materials
 *                                                                 
 *  5725-I43 Copyright IBM Corp. 2011, 2017
 *                                                                   
 *  The source code for this program is not published or otherwise
 *  divested of its trade secrets, irrespective of what has
 *  been deposited with the U.S. Copyright Office.
 *                   
 */


/**
 * The object containing the actions and the objects the actions act upon
 */
@ApiModel(description = "The object containing the actions and the objects the actions act upon")
@javax.annotation.Generated(value = "com.github.mfpdev.adapters.swagger.codegen.MfpAdapterCodegen", date = "2017-09-04T17:58:15.838+05:30")
public class SemanticRolesResult   {
  @JsonProperty("sentence")
  private String sentence = null;

  @JsonProperty("subject")
  private SemanticRolesSubject subject = null;

  @JsonProperty("action")
  private SemanticRolesAction action = null;

  @JsonProperty("object")
  private SemanticRolesObject object = null;

  public SemanticRolesResult sentence(String sentence) {
    this.sentence = sentence;
    return this;
  }

   /**
   * Sentence from the source that contains the subject, action, and object
   * @return sentence
  **/
  @JsonProperty("sentence")
  @ApiModelProperty(value = "Sentence from the source that contains the subject, action, and object")
  public String getSentence() {
    return sentence;
  }

  public void setSentence(String sentence) {
    this.sentence = sentence;
  }

  public SemanticRolesResult subject(SemanticRolesSubject subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The extracted subject from the sentence
   * @return subject
  **/
  @JsonProperty("subject")
  @ApiModelProperty(value = "The extracted subject from the sentence")
  public SemanticRolesSubject getSubject() {
    return subject;
  }

  public void setSubject(SemanticRolesSubject subject) {
    this.subject = subject;
  }

  public SemanticRolesResult action(SemanticRolesAction action) {
    this.action = action;
    return this;
  }

   /**
   * The extracted action from the sentence
   * @return action
  **/
  @JsonProperty("action")
  @ApiModelProperty(value = "The extracted action from the sentence")
  public SemanticRolesAction getAction() {
    return action;
  }

  public void setAction(SemanticRolesAction action) {
    this.action = action;
  }

  public SemanticRolesResult object(SemanticRolesObject object) {
    this.object = object;
    return this;
  }

   /**
   * The extracted object from the sentence
   * @return object
  **/
  @JsonProperty("object")
  @ApiModelProperty(value = "The extracted object from the sentence")
  public SemanticRolesObject getObject() {
    return object;
  }

  public void setObject(SemanticRolesObject object) {
    this.object = object;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SemanticRolesResult semanticRolesResult = (SemanticRolesResult) o;
    return Objects.equals(this.sentence, semanticRolesResult.sentence) &&
        Objects.equals(this.subject, semanticRolesResult.subject) &&
        Objects.equals(this.action, semanticRolesResult.action) &&
        Objects.equals(this.object, semanticRolesResult.object);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sentence, subject, action, object);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SemanticRolesResult {\n");
    
    sb.append("    sentence: ").append(toIndentedString(sentence)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

